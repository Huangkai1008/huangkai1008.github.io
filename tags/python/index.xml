<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on Huanghuang's Blog</title><link>https://huangkai1008.github.io/tags/python/</link><description>Recent content in python on Huanghuang's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 22 Nov 2019 15:19:35 +0800</lastBuildDate><atom:link href="https://huangkai1008.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>日志库Loguru使用教程</title><link>https://huangkai1008.github.io/p/%E6%97%A5%E5%BF%97%E5%BA%93loguru%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</link><pubDate>Fri, 22 Nov 2019 15:19:35 +0800</pubDate><guid>https://huangkai1008.github.io/p/%E6%97%A5%E5%BF%97%E5%BA%93loguru%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</guid><description>Loguru是一个好用的第三方python日志库 安装 pip install loguru 初步使用 添加日志到标准输出流 import sys from loguru import logger logger.add(sys.stderr, format=&amp;#39;{time}{level}{message}&amp;#39;, filter=&amp;#39;my module&amp;#39;, level=&amp;#39;INFO&amp;#39;) 添加日志到文件 from loguru import logger logger.add(&amp;#39;file_1.log&amp;#39;, rotation=&amp;#39;500 MB&amp;#39;) # Automatically</description></item><item><title>Eventlet使用</title><link>https://huangkai1008.github.io/p/eventlet%E4%BD%BF%E7%94%A8/</link><pubDate>Fri, 22 Nov 2019 11:20:20 +0800</pubDate><guid>https://huangkai1008.github.io/p/eventlet%E4%BD%BF%E7%94%A8/</guid><description>Evenlet是一个Python的基于携程的网络库，它改变了你代码运行的方式，但是没有改变你怎么写代码 安装 pip install eventlet 简单使用 从eventlet.</description></item><item><title>Black安装和使用</title><link>https://huangkai1008.github.io/p/black%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</link><pubDate>Fri, 27 Sep 2019 13:56:20 +0800</pubDate><guid>https://huangkai1008.github.io/p/black%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</guid><description>Black是一个毫不妥协的python代码格式化工具, 特点是可配置项较少 Black依赖于python3.6+, 官方地址在https://gi</description></item><item><title>Poetry安装和使用</title><link>https://huangkai1008.github.io/p/poetry%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</link><pubDate>Sat, 14 Sep 2019 13:56:20 +0800</pubDate><guid>https://huangkai1008.github.io/p/poetry%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</guid><description>安装 custom installer curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python source $HOME/.poetry/env pip pip install poetry # 不推荐, 可能会有冲突 验证安装 poetry --version 使用 项目初始化 从pipenv/pip等工具迁移 poetry init # 进入交互式命令行填写项目</description></item><item><title>值得关注的Python库</title><link>https://huangkai1008.github.io/p/%E5%80%BC%E5%BE%97%E5%85%B3%E6%B3%A8%E7%9A%84python%E5%BA%93/</link><pubDate>Mon, 27 May 2019 13:56:20 +0800</pubDate><guid>https://huangkai1008.github.io/p/%E5%80%BC%E5%BE%97%E5%85%B3%E6%B3%A8%E7%9A%84python%E5%BA%93/</guid><description>Web Frameworks Uvicorn 基于asyncio开发的一个轻量级高效的 web 服务器框架 Starlette Quart Responder Fastapi Sanic Utils Poetry 新的Python依赖包管理工具 Pipenv 用了很久的现在也在用的&amp;hellip</description></item><item><title>WSGI ASGI UWSGI的区别</title><link>https://huangkai1008.github.io/p/wsgi-asgi-uwsgi%E7%9A%84%E5%8C%BA%E5%88%AB/</link><pubDate>Thu, 24 Jan 2019 13:56:20 +0800</pubDate><guid>https://huangkai1008.github.io/p/wsgi-asgi-uwsgi%E7%9A%84%E5%8C%BA%E5%88%AB/</guid><description>What is wsgi **CGI(通用网关接口， Common Gateway Interface/CGI)** **CGI是定义客户端与web服务器交流方式的程序**。&amp;lt;u&amp;gt;例如正常情况下客户端发来一个</description></item><item><title>扩展Python Json Encoder</title><link>https://huangkai1008.github.io/p/%E6%89%A9%E5%B1%95python-json-encoder/</link><pubDate>Mon, 09 Apr 2018 22:49:14 +0800</pubDate><guid>https://huangkai1008.github.io/p/%E6%89%A9%E5%B1%95python-json-encoder/</guid><description>Python默认的json模块序列化并不是很全面，只能序列化基本的数据类型, 像一些时间格式或者自定义类型都不能序列化，所以在有些时候需要扩展</description></item><item><title>Python线程池使用</title><link>https://huangkai1008.github.io/p/python%E7%BA%BF%E7%A8%8B%E6%B1%A0%E4%BD%BF%E7%94%A8/</link><pubDate>Thu, 08 Feb 2018 22:49:14 +0800</pubDate><guid>https://huangkai1008.github.io/p/python%E7%BA%BF%E7%A8%8B%E6%B1%A0%E4%BD%BF%E7%94%A8/</guid><description>介绍 从Python3.2开始，标准库为我们提供了 concurrent.futures 模块，它提供了 ThreadPoolExecutor (线程池)和ProcessPoolExecutor (进程池)两个类。 相比 threading</description></item><item><title>Sqlalchemy使用注意</title><link>https://huangkai1008.github.io/p/sqlalchemy%E4%BD%BF%E7%94%A8%E6%B3%A8%E6%84%8F/</link><pubDate>Wed, 14 Jun 2017 13:56:20 +0800</pubDate><guid>https://huangkai1008.github.io/p/sqlalchemy%E4%BD%BF%E7%94%A8%E6%B3%A8%E6%84%8F/</guid><description>遇到in查询之类的批量删除或者更新，可以使用synchronize_session=False db.session.delete(synchronize_session=False) 使用find_in_set from sqlalchemy.sql.expression import func db.session.query(Post).filter(func.find_in_set(&amp;#39;10&amp;#39;, Post.c.tag_id)) 批量增</description></item><item><title>Python安装</title><link>https://huangkai1008.github.io/p/python%E5%AE%89%E8%A3%85/</link><pubDate>Sun, 08 Jan 2017 22:49:14 +0800</pubDate><guid>https://huangkai1008.github.io/p/python%E5%AE%89%E8%A3%85/</guid><description>Python安装 Platform: centos7 Version: 3.7 安装编译环境 yum install zlib-devel bzip2-devel openssl-devel ncurses-devel libffi-devel 下载 wget --no-check-certificate https://www.python.org/ftp/python/3.7.4/Python-3.7.4.tgz 创建安装目录解压 sudo mkdir /usr/local/python3 tar -zxvf Python-3.7.4.tgz cd Python-3.7.4/ 编译安装 sudo ./configure --prefix=/usr/local/python3 # 指定创建的目录 make &amp;amp;&amp;amp; make install # 编译安装</description></item></channel></rss>