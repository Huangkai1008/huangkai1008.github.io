<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Huanghuang&#39;s Blog</title>
    <link>https://huangkai1008.github.io/post/</link>
    <description>Recent content in Posts on Huanghuang&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 01 Jun 2020 21:56:20 +0800</lastBuildDate>
    
	<atom:link href="https://huangkai1008.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mysql的基础架构</title>
      <link>https://huangkai1008.github.io/post/database/mysql/ch1-mysql%E7%9A%84%E5%9F%BA%E7%A1%80%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Mon, 01 Jun 2020 21:56:20 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/database/mysql/ch1-mysql%E7%9A%84%E5%9F%BA%E7%A1%80%E6%9E%B6%E6%9E%84/</guid>
      <description>逻辑架构 MySQL可以大体分为Server层和存储引擎层两部分, 见图1 图1 Mysql逻辑架构图 Server 层包括连接器、查询缓存、分析器、优化器、执行</description>
    </item>
    
    <item>
      <title>Awesome Software</title>
      <link>https://huangkai1008.github.io/post/common/awesome-software/</link>
      <pubDate>Sun, 01 Dec 2019 22:21:57 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/common/awesome-software/</guid>
      <description>IDE Jetbrains系列 Editor Vscode Sublime text Typora(markdown编辑) Notion(笔记软件) 画图 Microsoft visio drawing.io 数据库 Mysql系列 Navicat Tableplus Jetbrains Datagrip Redis</description>
    </item>
    
    <item>
      <title>日志库Loguru使用教程</title>
      <link>https://huangkai1008.github.io/post/python/loguru/</link>
      <pubDate>Fri, 22 Nov 2019 15:19:35 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/python/loguru/</guid>
      <description>Loguru是一个好用的第三方python日志库 安装 1 pip install loguru 初步使用 添加日志到标准输出流 1 2 3 4 5 import sys from loguru import logger logger.add(sys.stderr, format=&amp;#39;{time} {level} {message}&amp;#39;, filter=&amp;#39;my module&amp;#39;, level=&amp;#39;INFO&amp;#39;) 添加日志到文件 1</description>
    </item>
    
    <item>
      <title>Eventlet使用</title>
      <link>https://huangkai1008.github.io/post/python/eventlet/</link>
      <pubDate>Fri, 22 Nov 2019 11:20:20 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/python/eventlet/</guid>
      <description>Evenlet是一个Python的基于携程的网络库，它改变了你代码运行的方式，但是没有改变你怎么写代码 安装 1 pip install eventlet 简单使用 从eventlet</description>
    </item>
    
    <item>
      <title>Git工作流</title>
      <link>https://huangkai1008.github.io/post/git/git-workflow/</link>
      <pubDate>Sat, 12 Oct 2019 14:36:49 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/git/git-workflow/</guid>
      <description>GitFlow 基本介绍 Gitflow 提倡使用 feature branches 模式来开发各个相互独立的功能，同时分成不同的分支以便进行集成和发布 分支介绍 长期分支 主分支(master) 开发分支(d</description>
    </item>
    
    <item>
      <title>Black安装和使用</title>
      <link>https://huangkai1008.github.io/post/python/black/</link>
      <pubDate>Fri, 27 Sep 2019 13:56:20 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/python/black/</guid>
      <description>Black是一个毫不妥协的python代码格式化工具, 特点是可配置项较少 Black依赖于python3.6+, 官方地址在https://gi</description>
    </item>
    
    <item>
      <title>Poetry安装和使用</title>
      <link>https://huangkai1008.github.io/post/python/poetry/</link>
      <pubDate>Sat, 14 Sep 2019 13:56:20 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/python/poetry/</guid>
      <description>安装 custom installer 1 2 curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python source $HOME/.poetry/env pip 1 pip install poetry # 不推荐, 可能会有冲突 验证安装 1 poetry --version 使用 项目初始化 从pipenv/pip等工具迁移 1 poetry init # 进入交互式命令</description>
    </item>
    
    <item>
      <title>Nginx安装和基本使用</title>
      <link>https://huangkai1008.github.io/post/nginx/nginx-install/</link>
      <pubDate>Mon, 26 Aug 2019 13:56:20 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/nginx/nginx-install/</guid>
      <description>Nginx (engine x) 是一个高性能的HTTP和反向代理web服务器，同时也提供了IMAP/POP3/SMTP服务。Nginx是由伊戈尔·赛索耶夫为俄罗斯访问</description>
    </item>
    
    <item>
      <title>Manjaro安装配置</title>
      <link>https://huangkai1008.github.io/post/common/manjaro/</link>
      <pubDate>Thu, 01 Aug 2019 22:21:57 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/common/manjaro/</guid>
      <description>基本安装 使用rufus以dd模式写入U盘 从u盘启动 将manjaro启动项中的driver和boot添加或修改driver=intel才能进入</description>
    </item>
    
    <item>
      <title>Git Commit Message编写规范</title>
      <link>https://huangkai1008.github.io/post/git/git-commit-message/</link>
      <pubDate>Fri, 12 Jul 2019 14:14:15 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/git/git-commit-message/</guid>
      <description>Git提交代码时需要提交Message, 为了使得提交信息更清晰明了, 需要确定规范 现在比较流行的规范是Angular规范, 也根据此规范衍生了C</description>
    </item>
    
    <item>
      <title>值得关注的Python库</title>
      <link>https://huangkai1008.github.io/post/python/libs/</link>
      <pubDate>Mon, 27 May 2019 13:56:20 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/python/libs/</guid>
      <description>Web Frameworks Uvicorn 基于asyncio开发的一个轻量级高效的 web 服务器框架 Starlette Quart Responder Fastapi Sanic Utils Poetry 新的Python依赖包管理工具 Pipenv 用了很久的现在也在用的&amp;hellip</description>
    </item>
    
    <item>
      <title>Spring初始化工具</title>
      <link>https://huangkai1008.github.io/post/spring/spring-initializr/</link>
      <pubDate>Thu, 07 Feb 2019 11:15:10 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/spring/spring-initializr/</guid>
      <description>使用IDEA初始化Spring Boot项目 选择File -&amp;gt; New -&amp;gt; Project 新建项目 选择Spring Initializr， 点击Next，填写项目基本信息 项</description>
    </item>
    
    <item>
      <title>WSGI ASGI UWSGI的区别</title>
      <link>https://huangkai1008.github.io/post/python/wsgiasgiuwsgi/</link>
      <pubDate>Thu, 24 Jan 2019 13:56:20 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/python/wsgiasgiuwsgi/</guid>
      <description>What is wsgi 1 2 3 4 5 6 7 8 **CGI(通用网关接口， Common Gateway Interface/CGI)** **CGI是定义客户端与web服务器交流方式的程序**。&amp;lt;u&amp;gt;例如正常情况</description>
    </item>
    
    <item>
      <title>RabbitMQ基础安装使用</title>
      <link>https://huangkai1008.github.io/post/mq/rabbitmq/rabbitmq-install/</link>
      <pubDate>Mon, 12 Nov 2018 13:56:20 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/mq/rabbitmq/rabbitmq-install/</guid>
      <description>RabbitMQ Platform: Centos7 安装 install Erlang 1 yum install erlang install rabbitMQ 1 2 3 4 5 6 # rpm安装 wget https://github.com/rabbitmq/rabbitmq-server/releases/download/rabbitmq_v3_6_14/rabbitmq-server-3.6.14-1.el7.noarch.rpm yum install rabbitmq-server-3.6.14-1.el7.noarch.rpm # yum安装 yum install rabbitmq-server 配置 启动远程访问 1 2 3 4 [{rabbit, [ {loopback_users, []} ]}] 安装插件 1 /sbin/rabbitmq-plugins enable rabbitmq_management 使用 服务命令</description>
    </item>
    
    <item>
      <title>Mysql优化</title>
      <link>https://huangkai1008.github.io/post/database/mysql/mysql-optimize/</link>
      <pubDate>Tue, 06 Nov 2018 13:56:20 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/database/mysql/mysql-optimize/</guid>
      <description>mysql中min和max查询优化 max()函数需扫描where条件过滤后的所有行 慎用max()函数，特别是频繁执行的sql，若需用到可转化</description>
    </item>
    
    <item>
      <title>Redis安装配置</title>
      <link>https://huangkai1008.github.io/post/redis/redis-install/</link>
      <pubDate>Thu, 11 Oct 2018 13:56:20 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/redis/redis-install/</guid>
      <description>Redis 安装 Platform: centos7 version: 5.0 安装 1 2 3 4 wget http://download.redis.io/releases/redis-5.0.0.tar.gz # 获取包 tar -zxvf redis-5.0.0.tar.gz mv redis-5.0.0 /usr/local/redis make &amp;amp;&amp;amp; make install Redis配置 设置配置文件目录 1 2 mkdir -p /etc/redis cp redis.conf /etc/redis 修改配置文件 1 2 3 4 vim /etc/redis/redis.conf daemonize yes (no -&amp;gt; yes) #</description>
    </item>
    
    <item>
      <title>Angular Starter</title>
      <link>https://huangkai1008.github.io/post/angular/angular-starter/</link>
      <pubDate>Tue, 09 Oct 2018 13:56:20 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/angular/angular-starter/</guid>
      <description>安装Angular 确保node/npm已安装 1 2 node -v 查看node版本 npm -v 查看npm版本 安装typescript 1 npm install -g typescript 安装Angular CLI</description>
    </item>
    
    <item>
      <title>MongoDB的安装</title>
      <link>https://huangkai1008.github.io/post/mongodb/mongo-install/</link>
      <pubDate>Wed, 12 Sep 2018 13:56:20 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/mongodb/mongo-install/</guid>
      <description>安装 Platform: centos7</description>
    </item>
    
    <item>
      <title>MariaDB安装</title>
      <link>https://huangkai1008.github.io/post/database/mysql/mariadb-install/</link>
      <pubDate>Sun, 09 Sep 2018 13:56:20 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/database/mysql/mariadb-install/</guid>
      <description>MariaDB安装 platform: Centos7 Install 1 yum install -y mariadb-server MariaDB配置使用 Using 1 2 systemctl start mariadb.service # 启动 systemctl enable mariadb.service # 开机自启 Configure 首先是设置密码，会提示先输入密码 Enter current password for root (enter for none):</description>
    </item>
    
    <item>
      <title>Mysql安装配置</title>
      <link>https://huangkai1008.github.io/post/database/mysql/mysql-install/</link>
      <pubDate>Sun, 09 Sep 2018 13:56:20 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/database/mysql/mysql-install/</guid>
      <description>Mysql安装 版本: 8.0 添加源 bash yum local install https://repo.mysql.com//mysql80-community-release-el7-1.noarch.rpm 安装 bash yum install mysql-community-server Mysql配置 初始化 1 sudo mysqld --initialize --user=mysql --basedir=/usr --datadir=/var/lib/mysql 启动mysql 1 systemctl start mysqld 设置mysql开机自启 1 systemctl enable mysqld 查看</description>
    </item>
    
    <item>
      <title>数据库系统概论-介绍</title>
      <link>https://huangkai1008.github.io/post/database/database-system-concept/ch1-introduction/</link>
      <pubDate>Sun, 09 Sep 2018 13:56:20 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/database/database-system-concept/ch1-introduction/</guid>
      <description>数据库系统的目的(Purpose of Database Systems) 在早期，数据库应用程序直接建立在文件系统之上，导致一系列的问题 数据冗余和不一致(Data redundancy and inconsistency) 数据访问</description>
    </item>
    
    <item>
      <title>Golang安装</title>
      <link>https://huangkai1008.github.io/post/golang/golang-install/</link>
      <pubDate>Tue, 31 Jul 2018 13:56:20 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/golang/golang-install/</guid>
      <description>安装 Platform: Centos7 version: 1.12 安装 1 2 3 cd /opt wget https://studygolang.com/dl/golang/go1.12.4.linux-amd64.tar.gz tar xzvf go1.12.4.linux-amd64.tar.gz # 安装 配置环境变量 1 2 3 4 5 6 7 8 9 vim ~/.zshrc # 如果用bash就是vim ~/.bashrc # 追加golang配置 export GOROOT=/opt/go export PATH=$PATH:$GOROOT/bin # 立即</description>
    </item>
    
    <item>
      <title>扩展Python Json Encoder</title>
      <link>https://huangkai1008.github.io/post/python/extend-json-encoder/</link>
      <pubDate>Mon, 09 Apr 2018 22:49:14 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/python/extend-json-encoder/</guid>
      <description>Python默认的json模块序列化并不是很全面，只能序列化基本的数据类型, 像一些时间格式或者自定义类型都不能序列化，所以在有些时候需要扩展</description>
    </item>
    
    <item>
      <title>Python线程池使用</title>
      <link>https://huangkai1008.github.io/post/python/python-threadpool-executor/</link>
      <pubDate>Thu, 08 Feb 2018 22:49:14 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/python/python-threadpool-executor/</guid>
      <description>介绍 从Python3.2开始，标准库为我们提供了 concurrent.futures 模块，它提供了 ThreadPoolExecutor (线程池)和ProcessPoolExecutor (进程池)两个类。 相比 threading</description>
    </item>
    
    <item>
      <title>Docker安装</title>
      <link>https://huangkai1008.github.io/post/docker/docker-install/</link>
      <pubDate>Wed, 31 Jan 2018 13:56:20 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/docker/docker-install/</guid>
      <description>Platform: centos7 version: 5.0 安装 Uninstall old versions 1 2 3 4 5 6 7 8 sudo yum remove docker \ docker-client \ docker-client-latest \ docker-common \ docker-latest \ docker-latest-logrotate \ docker-logrotate \ docker-engine Install Docker CE 1 2 3 4 5 6 7 8 9 10 11 sudo yum install -y yum-utils \ device-mapper-persistent-data \ lvm2 # 设置stable源 sudo yum-config-manager</description>
    </item>
    
    <item>
      <title>Sqlalchemy使用注意</title>
      <link>https://huangkai1008.github.io/post/python/sqlalchemy-tips/</link>
      <pubDate>Wed, 14 Jun 2017 13:56:20 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/python/sqlalchemy-tips/</guid>
      <description>遇到in查询之类的批量删除或者更新，可以使用synchronize_session=False 1 db.session.delete(synchronize_session=False) 使用find_in_set 1 2 3 from sqlalchemy.sql.expression import func db.session.query(Post).filter(func.find_in_set(&amp;#39;10&amp;#39;,</description>
    </item>
    
    <item>
      <title>Python安装</title>
      <link>https://huangkai1008.github.io/post/python/python-install/</link>
      <pubDate>Sun, 08 Jan 2017 22:49:14 +0800</pubDate>
      
      <guid>https://huangkai1008.github.io/post/python/python-install/</guid>
      <description>Python安装 Platform: centos7 Version: 3.7 安装编译环境 1 yum install zlib-devel bzip2-devel openssl-devel ncurses-devel libffi-devel 下载 1 wget --no-check-certificate https://www.python.org/ftp/python/3.7.4/Python-3.7.4.tgz 创建安装目录解压 1 2 3 4 5 sudo mkdir /usr/local/python3 tar -zxvf Python-3.7.4.tgz cd Python-3.7.4/ 编译安装 1 2 3 sudo ./configure --prefix=/usr/local/python3 # 指定创建的目</description>
    </item>
    
  </channel>
</rss>